#include <iostream>

bool isPalindrome(const std::string& str) {
    size_t i = 0;
    size_t j = str.length() - 1;

    while (i < j) {
        while (i < j && !std::isalnum(str[i])) {
            i++;
        }

        while (i < j && !std::isalnum(str[j])) {
            j--;
        }

        if (std::tolower(str[i]) != std::tolower(str[j])) {
            return false;
        }

        i++;
        j--;
    }

    return true;
}

std::string removeSpacesAndPunctuation(const std::string& str) {
    std::string result;

    for (char c : str) {
        if (std::isalnum(c)) {
            result += std::tolower(c);
        }
    }

    return result;
}

void printReverseOrder(const std::string& str) {
    for (int i = str.length() - 1; i >= 0; i--) {
        std::cout << str[i];
    }

    std::cout << std::endl;
}

int main() {
    std::string inputString;

    std::cout << "Enter a string: ";
    std::getline(std::cin, inputString);

    if (isPalindrome(inputString)) {
        std::cout << "The string is a palindrome." << std::endl;
    } else {
        std::cout << "The string is not a palindrome." << std::endl;
    }

    std::string modifiedString = removeSpacesAndPunctuation(inputString);
    if (isPalindrome(modifiedString)) {
        std::cout << "After removing spaces and punctuation, the string is a palindrome." << std::endl;
    } else {
        std::cout << "After removing spaces and punctuation, the string is not a palindrome." << std::endl;
    }

    std::cout << "String in reverse order: ";
    printReverseOrder(inputString);

    return 0;
}
